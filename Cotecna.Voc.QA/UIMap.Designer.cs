// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Cotecna.Voc.QA
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.SilverlightControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            SilverlightButton uINewButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UINewButton;
            SilverlightComboBox uICbEntryPointComboBox = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UICbEntryPointComboBox;
            SilverlightListItem uIEntryPoint23ListItem = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UICbEntryPointComboBox.UIEntryPoint23ListItem;
            SilverlightRadioButton uINORadioButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UINORadioButton;
            SilverlightButton uISaveButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UISaveButton;
            SilverlightTabItem uICertificatesTabItem = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UIScrollViewerTopPane.UICertificatesTabItem;
            SilverlightButton uIRefreshButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UIRefreshButton;
            SilverlightButton uISystemWindowsControlButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UIPage1of5Text.UISystemWindowsControlButton;
            #endregion

            // Go to web page 'http://localhost/VocIraq/webtest.html' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.RecordedMethod1Params.UIBlankPageWindowsInteWindowUrl));

            // Click 'New' button
            Mouse.Click(uINewButton, new Point(30, 14));

            // Click 'cbEntryPoint' combo box
            Mouse.Click(uICbEntryPointComboBox, new Point(74, 10));

            // Click 'EntryPoint : 23' list item
            Mouse.Click(uIEntryPoint23ListItem, new Point(34, 13));

            // Select 'No' radio button
            uINORadioButton.Selected = this.RecordedMethod1Params.UINORadioButtonSelected;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(61, 17));

            // Click 'Certificates' TabItem
            Mouse.Click(uICertificatesTabItem, new Point(48, 17));

            // Click 'Refresh' button
            Mouse.Click(uIRefreshButton, new Point(51, 11));

            // Click 'System.Windows.Controls.StackPanel' button
            Mouse.Click(uISystemWindowsControlButton, new Point(14, 17));
        }
        
        /// <summary>
        /// edit item. Invoiced to no
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            SilverlightControl uIItemTransitioningContentControl = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UIAssetsImagesLogo_VocImage.UIItemTransitioningContentControl;
            WinWindow uISilverlightControlWindow = this.UIItemWindow.UISilverlightControlWindow;
            SilverlightHyperlink uIEditHyperlink = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage1.UITabTab.UIGridResultsTable.UICertificate33Row.UIItemCell.UIEditHyperlink;
            SilverlightRadioButton uINORadioButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage2.UITabTab.UINORadioButton;
            SilverlightButton uISaveButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage3.UITabTab.UISaveButton;
            #endregion

            // Last mouse action was not recorded.

            // Type '{F5}' in first TransitioningContentControl next to 'Assets/Images/Logo_VocIraq_25px.png' image
            Keyboard.SendKeys(uIItemTransitioningContentControl, this.RecordedMethod2Params.UIItemTransitioningContentControlSendKeys, ModifierKeys.None);

            // Click 'Silverlight Control' window
            Mouse.Click(uISilverlightControlWindow, new Point(1072, 755));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(13, 7));

            // Select 'No' radio button
            uINORadioButton.Selected = this.RecordedMethod2Params.UINORadioButtonSelected;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(39, 18));
        }
        
        /// <summary>
        /// RecordedMethod3 - Use 'RecordedMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            BrowserWindow uIBlankPageWindowsInteWindow = this.UIBlankPageWindowsInteWindow;
            SilverlightButton uINewButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UINewButton;
            SilverlightComboBox uICbEntryPointComboBox = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UICbEntryPointComboBox;
            SilverlightListItem uIEntryPoint9ListItem = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UICbEntryPointComboBox.UIEntryPoint9ListItem;
            SilverlightRadioButton uIYesRadioButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UIYesRadioButton;
            SilverlightButton uISaveButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UISaveButton;
            #endregion

            // Go to web page 'http://localhost/VocIraq/webtest.html'
            uIBlankPageWindowsInteWindow.NavigateToUrl(new System.Uri(this.RecordedMethod3Params.UIBlankPageWindowsInteWindowUrl));

            // Click 'New' button
            Mouse.Click(uINewButton, new Point(36, 9));

            // Click 'cbEntryPoint' combo box
            Mouse.Click(uICbEntryPointComboBox, new Point(126, 10));

            // Click 'EntryPoint : 9' list item
            Mouse.Click(uIEntryPoint9ListItem, new Point(42, 15));

            // Select 'Yes' radio button
            uIYesRadioButton.Selected = this.RecordedMethod3Params.UIYesRadioButtonSelected;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(47, 13));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual RecordedMethod3Params RecordedMethod3Params
        {
            get
            {
                if ((this.mRecordedMethod3Params == null))
                {
                    this.mRecordedMethod3Params = new RecordedMethod3Params();
                }
                return this.mRecordedMethod3Params;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private RecordedMethod3Params mRecordedMethod3Params;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost/VocIraq/webtest.html' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://localhost/VocIraq/webtest.html";
        
        /// <summary>
        /// Select 'No' radio button
        /// </summary>
        public bool UINORadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in first TransitioningContentControl next to 'Assets/Images/Logo_VocIraq_25px.png' image
        /// </summary>
        public string UIItemTransitioningContentControlSendKeys = "{F5}";
        
        /// <summary>
        /// Select 'No' radio button
        /// </summary>
        public bool UINORadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost/VocIraq/webtest.html'
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://localhost/VocIraq/webtest.html";
        
        /// <summary>
        /// Select 'Yes' radio button
        /// </summary>
        public bool UIYesRadioButtonSelected = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVoCDocument UIVoCDocument
        {
            get
            {
                if ((this.mUIVoCDocument == null))
                {
                    this.mUIVoCDocument = new UIVoCDocument(this);
                }
                return this.mUIVoCDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVoCDocument mUIVoCDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVoCDocument : HtmlDocument
    {
        
        public UIVoCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "VoC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/VocIraq/webtest.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/VocIraq/webtest.html";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlHoPane UISilverlightControlHoPane
        {
            get
            {
                if ((this.mUISilverlightControlHoPane == null))
                {
                    this.mUISilverlightControlHoPane = new UISilverlightControlHoPane(this);
                }
                return this.mUISilverlightControlHoPane;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlHoPane mUISilverlightControlHoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISilverlightControlHoPane : HtmlDiv
    {
        
        public UISilverlightControlHoPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "silverlightControlHost";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=silverlightControlHost";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCustom : HtmlCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "OBJECT";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "data=\"data:application/x-oleobject;base6";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIMainPageMainPage UIMainPageMainPage
        {
            get
            {
                if ((this.mUIMainPageMainPage == null))
                {
                    this.mUIMainPageMainPage = new UIMainPageMainPage(this);
                }
                return this.mUIMainPageMainPage;
            }
        }
        
        public UIMainPageMainPage1 UIMainPageMainPage1
        {
            get
            {
                if ((this.mUIMainPageMainPage1 == null))
                {
                    this.mUIMainPageMainPage1 = new UIMainPageMainPage1(this);
                }
                return this.mUIMainPageMainPage1;
            }
        }
        
        public UIMainPageMainPage2 UIMainPageMainPage2
        {
            get
            {
                if ((this.mUIMainPageMainPage2 == null))
                {
                    this.mUIMainPageMainPage2 = new UIMainPageMainPage2(this);
                }
                return this.mUIMainPageMainPage2;
            }
        }
        
        public UIMainPageMainPage3 UIMainPageMainPage3
        {
            get
            {
                if ((this.mUIMainPageMainPage3 == null))
                {
                    this.mUIMainPageMainPage3 = new UIMainPageMainPage3(this);
                }
                return this.mUIMainPageMainPage3;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPageMainPage mUIMainPageMainPage;
        
        private UIMainPageMainPage1 mUIMainPageMainPage1;
        
        private UIMainPageMainPage2 mUIMainPageMainPage2;
        
        private UIMainPageMainPage3 mUIMainPageMainPage3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage : SilverlightControl
    {
        
        public UIMainPageMainPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab(this);
                }
                return this.mUITabTab;
            }
        }
        
        public UIAssetsImagesLogo_VocImage UIAssetsImagesLogo_VocImage
        {
            get
            {
                if ((this.mUIAssetsImagesLogo_VocImage == null))
                {
                    this.mUIAssetsImagesLogo_VocImage = new UIAssetsImagesLogo_VocImage(this);
                }
                return this.mUIAssetsImagesLogo_VocImage;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab mUITabTab;
        
        private UIAssetsImagesLogo_VocImage mUIAssetsImagesLogo_VocImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab : SilverlightTab
    {
        
        public UITabTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UINewButton
        {
            get
            {
                if ((this.mUINewButton == null))
                {
                    this.mUINewButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUINewButton.SearchProperties[SilverlightButton.PropertyNames.Name] = "New";
                    this.mUINewButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUINewButton;
            }
        }
        
        public UICbEntryPointComboBox UICbEntryPointComboBox
        {
            get
            {
                if ((this.mUICbEntryPointComboBox == null))
                {
                    this.mUICbEntryPointComboBox = new UICbEntryPointComboBox(this);
                }
                return this.mUICbEntryPointComboBox;
            }
        }
        
        public SilverlightRadioButton UINORadioButton
        {
            get
            {
                if ((this.mUINORadioButton == null))
                {
                    this.mUINORadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.Name] = "No";
                    this.mUINORadioButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUINORadioButton;
            }
        }
        
        public SilverlightButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISaveButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public UIScrollViewerTopPane UIScrollViewerTopPane
        {
            get
            {
                if ((this.mUIScrollViewerTopPane == null))
                {
                    this.mUIScrollViewerTopPane = new UIScrollViewerTopPane(this);
                }
                return this.mUIScrollViewerTopPane;
            }
        }
        
        public SilverlightButton UIRefreshButton
        {
            get
            {
                if ((this.mUIRefreshButton == null))
                {
                    this.mUIRefreshButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIRefreshButton.SearchProperties[SilverlightButton.PropertyNames.Name] = "Refresh";
                    this.mUIRefreshButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIRefreshButton;
            }
        }
        
        public UIPage1of5Text UIPage1of5Text
        {
            get
            {
                if ((this.mUIPage1of5Text == null))
                {
                    this.mUIPage1of5Text = new UIPage1of5Text(this);
                }
                return this.mUIPage1of5Text;
            }
        }
        
        public SilverlightRadioButton UIYesRadioButton
        {
            get
            {
                if ((this.mUIYesRadioButton == null))
                {
                    this.mUIYesRadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mUIYesRadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.AutomationId] = "rbInvoiced";
                    this.mUIYesRadioButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIYesRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUINewButton;
        
        private UICbEntryPointComboBox mUICbEntryPointComboBox;
        
        private SilverlightRadioButton mUINORadioButton;
        
        private SilverlightButton mUISaveButton;
        
        private UIScrollViewerTopPane mUIScrollViewerTopPane;
        
        private SilverlightButton mUIRefreshButton;
        
        private UIPage1of5Text mUIPage1of5Text;
        
        private SilverlightRadioButton mUIYesRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICbEntryPointComboBox : SilverlightComboBox
    {
        
        public UICbEntryPointComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightComboBox.PropertyNames.AutomationId] = "cbEntryPoint";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightListItem UIEntryPoint23ListItem
        {
            get
            {
                if ((this.mUIEntryPoint23ListItem == null))
                {
                    this.mUIEntryPoint23ListItem = new SilverlightListItem(this);
                    #region Search Criteria
                    this.mUIEntryPoint23ListItem.SearchProperties[SilverlightListItem.PropertyNames.Name] = "EntryPoint : 23";
                    this.mUIEntryPoint23ListItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEntryPoint23ListItem;
            }
        }
        
        public SilverlightListItem UIEntryPoint9ListItem
        {
            get
            {
                if ((this.mUIEntryPoint9ListItem == null))
                {
                    this.mUIEntryPoint9ListItem = new SilverlightListItem(this);
                    #region Search Criteria
                    this.mUIEntryPoint9ListItem.SearchProperties[SilverlightListItem.PropertyNames.Name] = "EntryPoint : 9";
                    this.mUIEntryPoint9ListItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEntryPoint9ListItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightListItem mUIEntryPoint23ListItem;
        
        private SilverlightListItem mUIEntryPoint9ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIScrollViewerTopPane : SilverlightControl
    {
        
        public UIScrollViewerTopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties["AutomationId"] = "ScrollViewerTop";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightTabItem UICertificatesTabItem
        {
            get
            {
                if ((this.mUICertificatesTabItem == null))
                {
                    this.mUICertificatesTabItem = new SilverlightTabItem(this);
                    #region Search Criteria
                    this.mUICertificatesTabItem.SearchProperties[SilverlightTabItem.PropertyNames.Name] = "Certificates";
                    this.mUICertificatesTabItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUICertificatesTabItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightTabItem mUICertificatesTabItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPage1of5Text : SilverlightText
    {
        
        public UIPage1of5Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "Page 1 of 5";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UISystemWindowsControlButton
        {
            get
            {
                if ((this.mUISystemWindowsControlButton == null))
                {
                    this.mUISystemWindowsControlButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUISystemWindowsControlButton.SearchProperties[SilverlightButton.PropertyNames.Instance] = "2";
                    this.mUISystemWindowsControlButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUISystemWindowsControlButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUISystemWindowsControlButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUISystemWindowsControlButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAssetsImagesLogo_VocImage : SilverlightImage
    {
        
        public UIAssetsImagesLogo_VocImage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightImage.PropertyNames.Source] = "Assets/Images/Logo_VocIraq_25px.png";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightControl UIItemTransitioningContentControl
        {
            get
            {
                if ((this.mUIItemTransitioningContentControl == null))
                {
                    this.mUIItemTransitioningContentControl = new SilverlightControl(this);
                    #region Search Criteria
                    this.mUIItemTransitioningContentControl.SearchProperties[UITestControl.PropertyNames.ControlType] = "TransitioningContentControl";
                    this.mUIItemTransitioningContentControl.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemTransitioningContentControl.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIItemTransitioningContentControl;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightControl mUIItemTransitioningContentControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage1 : SilverlightControl
    {
        
        public UIMainPageMainPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab1 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab1(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab1 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab1 : SilverlightTab
    {
        
        public UITabTab1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIGridResultsTable UIGridResultsTable
        {
            get
            {
                if ((this.mUIGridResultsTable == null))
                {
                    this.mUIGridResultsTable = new UIGridResultsTable(this);
                }
                return this.mUIGridResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridResultsTable mUIGridResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGridResultsTable : SilverlightTable
    {
        
        public UIGridResultsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTable.PropertyNames.AutomationId] = "GridResults";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UICertificate33Row UICertificate33Row
        {
            get
            {
                if ((this.mUICertificate33Row == null))
                {
                    this.mUICertificate33Row = new UICertificate33Row(this);
                }
                return this.mUICertificate33Row;
            }
        }
        #endregion
        
        #region Fields
        private UICertificate33Row mUICertificate33Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICertificate33Row : SilverlightRow
    {
        
        public UICertificate33Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightRow.PropertyNames.Name] = "Certificate : 33";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell : SilverlightCell
    {
        
        public UIItemCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnIndex] = "7";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new SilverlightHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.Name] = "Edit";
                    this.mUIEditHyperlink.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage2 : SilverlightControl
    {
        
        public UIMainPageMainPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab2 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab2(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab2 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab2 : SilverlightTab
    {
        
        public UITabTab2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightRadioButton UINORadioButton
        {
            get
            {
                if ((this.mUINORadioButton == null))
                {
                    this.mUINORadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.Name] = "No";
                    this.mUINORadioButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUINORadioButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightRadioButton mUINORadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage3 : SilverlightControl
    {
        
        public UIMainPageMainPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab3 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab3(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab3 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab3 : SilverlightTab
    {
        
        public UITabTab3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISaveButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public WinWindow UISilverlightControlWindow
        {
            get
            {
                if ((this.mUISilverlightControlWindow == null))
                {
                    this.mUISilverlightControlWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUISilverlightControlWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Silverlight Control";
                    #endregion
                }
                return this.mUISilverlightControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUISilverlightControlWindow;
        #endregion
    }
}
