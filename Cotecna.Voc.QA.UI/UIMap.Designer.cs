// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Cotecna.Voc.QA
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.SilverlightControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Only should display buttons in items 1,4,9. And work in 1,4
        /// </summary>
        public void TestRequest()
        {
            #region Variable Declarations
            SilverlightHyperlink uIRequestHyperlink = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage.UITabTab.UIGridResultsTable.UICertificate1Row.UIItemCell.UIRequestHyperlink;
            SilverlightButton uIYesButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage1.UIItemWindow.UIQuestionChildWindow.UIYesButton;
            SilverlightHyperlink uIEditHyperlink = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage2.UITabTab.UIGridResultsTable.UICertificate4Row.UIItemCell.UIEditHyperlink;
            SilverlightButton uIRequestButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage3.UITabTab.UIRequestButton;
            SilverlightButton uIYesButton1 = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage4.UIItemWindow1.UIQuestionChildWindow.UIYesButton;
            SilverlightTabItem uICertificatesTabItem = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage5.UITabTab.UIScrollViewerTopPane.UICertificatesTabItem;
            SilverlightHyperlink uIEditHyperlink1 = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage6.UITabTab.UIGridResultsTable.UICertificate9Row.UIItemCell.UIEditHyperlink;
            SilverlightButton uIRequestButton1 = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage7.UITabTab.UIRequestButton1;
            SilverlightButton uIOKButton = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage8.UIItemWindow2.UIAlertChildWindow.UIOKButton;
            SilverlightTabItem uICertificatesTabItem1 = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage9.UITabTab.UIScrollViewerTopPane.UICertificatesTabItem;
            SilverlightHyperlink uIRequestHyperlink1 = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage10.UITabTab.UIGridResultsTable.UICertificate9Row.UIItemCell1.UIRequestHyperlink;
            SilverlightButton uIOKButton1 = this.UIBlankPageWindowsInteWindow.UIVoCDocument1.UISilverlightControlHoPane.UIItemCustom.UIMainPageMainPage11.UIItemWindow3.UIAlertChildWindow.UIOKButton;
            #endregion

            // Go to web page 'http://ecuio0001/VocIraq/webtest.html' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.TestRequestParams.UIBlankPageWindowsInteWindowUrl));

            // Click 'Request' link
            Mouse.Click(uIRequestHyperlink, new Point(18, 6));

            // Click 'Yes' button
            Mouse.Click(uIYesButton, new Point(24, 10));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(13, 6));

            // Click 'Request' button
            Mouse.Click(uIRequestButton, new Point(25, 8));

            // Click 'Yes' button
            Mouse.Click(uIYesButton1, new Point(36, 6));

            // Click 'Certificates' TabItem
            Mouse.Click(uICertificatesTabItem, new Point(76, 22));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink1, new Point(13, 8));

            // Click 'Request' button
            Mouse.Click(uIRequestButton1, new Point(30, 13));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(38, 11));

            // Click 'Certificates' TabItem
            Mouse.Click(uICertificatesTabItem1, new Point(82, 16));

            // Click 'Request' link
            Mouse.Click(uIRequestHyperlink1, new Point(23, 6));

            // Click 'Ok' button
            Mouse.Click(uIOKButton1, new Point(53, 8));
        }
        
        #region Properties
        public virtual TestRequestParams TestRequestParams
        {
            get
            {
                if ((this.mTestRequestParams == null))
                {
                    this.mTestRequestParams = new TestRequestParams();
                }
                return this.mTestRequestParams;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestRequestParams mTestRequestParams;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        
        private UIItemWindow4 mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestRequest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TestRequestParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://ecuio0001/VocIraq/webtest.html' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://ecuio0001/VocIraq/webtest.html";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVoCDocument UIVoCDocument
        {
            get
            {
                if ((this.mUIVoCDocument == null))
                {
                    this.mUIVoCDocument = new UIVoCDocument(this);
                }
                return this.mUIVoCDocument;
            }
        }
        
        public UIVoCDocument1 UIVoCDocument1
        {
            get
            {
                if ((this.mUIVoCDocument1 == null))
                {
                    this.mUIVoCDocument1 = new UIVoCDocument1(this);
                }
                return this.mUIVoCDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIVoCDocument mUIVoCDocument;
        
        private UIVoCDocument1 mUIVoCDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVoCDocument : HtmlDocument
    {
        
        public UIVoCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "VoC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/VocIraq/webtest.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/VocIraq/webtest.html";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlHoPane UISilverlightControlHoPane
        {
            get
            {
                if ((this.mUISilverlightControlHoPane == null))
                {
                    this.mUISilverlightControlHoPane = new UISilverlightControlHoPane(this);
                }
                return this.mUISilverlightControlHoPane;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlHoPane mUISilverlightControlHoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISilverlightControlHoPane : HtmlDiv
    {
        
        public UISilverlightControlHoPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "silverlightControlHost";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=silverlightControlHost";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCustom : HtmlCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "OBJECT";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "data=\"data:application/x-oleobject;base6";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIMainPageMainPage UIMainPageMainPage
        {
            get
            {
                if ((this.mUIMainPageMainPage == null))
                {
                    this.mUIMainPageMainPage = new UIMainPageMainPage(this);
                }
                return this.mUIMainPageMainPage;
            }
        }
        
        public UIMainPageMainPage1 UIMainPageMainPage1
        {
            get
            {
                if ((this.mUIMainPageMainPage1 == null))
                {
                    this.mUIMainPageMainPage1 = new UIMainPageMainPage1(this);
                }
                return this.mUIMainPageMainPage1;
            }
        }
        
        public UIMainPageMainPage2 UIMainPageMainPage2
        {
            get
            {
                if ((this.mUIMainPageMainPage2 == null))
                {
                    this.mUIMainPageMainPage2 = new UIMainPageMainPage2(this);
                }
                return this.mUIMainPageMainPage2;
            }
        }
        
        public UIMainPageMainPage3 UIMainPageMainPage3
        {
            get
            {
                if ((this.mUIMainPageMainPage3 == null))
                {
                    this.mUIMainPageMainPage3 = new UIMainPageMainPage3(this);
                }
                return this.mUIMainPageMainPage3;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPageMainPage mUIMainPageMainPage;
        
        private UIMainPageMainPage1 mUIMainPageMainPage1;
        
        private UIMainPageMainPage2 mUIMainPageMainPage2;
        
        private UIMainPageMainPage3 mUIMainPageMainPage3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage : SilverlightControl
    {
        
        public UIMainPageMainPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab(this);
                }
                return this.mUITabTab;
            }
        }
        
        public UIAssetsImagesLogo_VocImage UIAssetsImagesLogo_VocImage
        {
            get
            {
                if ((this.mUIAssetsImagesLogo_VocImage == null))
                {
                    this.mUIAssetsImagesLogo_VocImage = new UIAssetsImagesLogo_VocImage(this);
                }
                return this.mUIAssetsImagesLogo_VocImage;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab mUITabTab;
        
        private UIAssetsImagesLogo_VocImage mUIAssetsImagesLogo_VocImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab : SilverlightTab
    {
        
        public UITabTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UINewButton
        {
            get
            {
                if ((this.mUINewButton == null))
                {
                    this.mUINewButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUINewButton.SearchProperties[SilverlightButton.PropertyNames.Name] = "New";
                    this.mUINewButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUINewButton;
            }
        }
        
        public UICbEntryPointComboBox UICbEntryPointComboBox
        {
            get
            {
                if ((this.mUICbEntryPointComboBox == null))
                {
                    this.mUICbEntryPointComboBox = new UICbEntryPointComboBox(this);
                }
                return this.mUICbEntryPointComboBox;
            }
        }
        
        public SilverlightRadioButton UINORadioButton
        {
            get
            {
                if ((this.mUINORadioButton == null))
                {
                    this.mUINORadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.Name] = "No";
                    this.mUINORadioButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUINORadioButton;
            }
        }
        
        public SilverlightButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISaveButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public UIScrollViewerTopPane UIScrollViewerTopPane
        {
            get
            {
                if ((this.mUIScrollViewerTopPane == null))
                {
                    this.mUIScrollViewerTopPane = new UIScrollViewerTopPane(this);
                }
                return this.mUIScrollViewerTopPane;
            }
        }
        
        public SilverlightButton UIRefreshButton
        {
            get
            {
                if ((this.mUIRefreshButton == null))
                {
                    this.mUIRefreshButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIRefreshButton.SearchProperties[SilverlightButton.PropertyNames.Name] = "Refresh";
                    this.mUIRefreshButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIRefreshButton;
            }
        }
        
        public UIPage1of5Text UIPage1of5Text
        {
            get
            {
                if ((this.mUIPage1of5Text == null))
                {
                    this.mUIPage1of5Text = new UIPage1of5Text(this);
                }
                return this.mUIPage1of5Text;
            }
        }
        
        public SilverlightRadioButton UIYesRadioButton
        {
            get
            {
                if ((this.mUIYesRadioButton == null))
                {
                    this.mUIYesRadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mUIYesRadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.AutomationId] = "rbInvoiced";
                    this.mUIYesRadioButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIYesRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUINewButton;
        
        private UICbEntryPointComboBox mUICbEntryPointComboBox;
        
        private SilverlightRadioButton mUINORadioButton;
        
        private SilverlightButton mUISaveButton;
        
        private UIScrollViewerTopPane mUIScrollViewerTopPane;
        
        private SilverlightButton mUIRefreshButton;
        
        private UIPage1of5Text mUIPage1of5Text;
        
        private SilverlightRadioButton mUIYesRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICbEntryPointComboBox : SilverlightComboBox
    {
        
        public UICbEntryPointComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightComboBox.PropertyNames.AutomationId] = "cbEntryPoint";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightListItem UIEntryPoint23ListItem
        {
            get
            {
                if ((this.mUIEntryPoint23ListItem == null))
                {
                    this.mUIEntryPoint23ListItem = new SilverlightListItem(this);
                    #region Search Criteria
                    this.mUIEntryPoint23ListItem.SearchProperties[SilverlightListItem.PropertyNames.Name] = "EntryPoint : 23";
                    this.mUIEntryPoint23ListItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEntryPoint23ListItem;
            }
        }
        
        public SilverlightListItem UIEntryPoint9ListItem
        {
            get
            {
                if ((this.mUIEntryPoint9ListItem == null))
                {
                    this.mUIEntryPoint9ListItem = new SilverlightListItem(this);
                    #region Search Criteria
                    this.mUIEntryPoint9ListItem.SearchProperties[SilverlightListItem.PropertyNames.Name] = "EntryPoint : 9";
                    this.mUIEntryPoint9ListItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEntryPoint9ListItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightListItem mUIEntryPoint23ListItem;
        
        private SilverlightListItem mUIEntryPoint9ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIScrollViewerTopPane : SilverlightControl
    {
        
        public UIScrollViewerTopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties["AutomationId"] = "ScrollViewerTop";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightTabItem UICertificatesTabItem
        {
            get
            {
                if ((this.mUICertificatesTabItem == null))
                {
                    this.mUICertificatesTabItem = new SilverlightTabItem(this);
                    #region Search Criteria
                    this.mUICertificatesTabItem.SearchProperties[SilverlightTabItem.PropertyNames.Name] = "Certificates";
                    this.mUICertificatesTabItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUICertificatesTabItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightTabItem mUICertificatesTabItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPage1of5Text : SilverlightText
    {
        
        public UIPage1of5Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "Page 1 of 5";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UISystemWindowsControlButton
        {
            get
            {
                if ((this.mUISystemWindowsControlButton == null))
                {
                    this.mUISystemWindowsControlButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUISystemWindowsControlButton.SearchProperties[SilverlightButton.PropertyNames.Instance] = "2";
                    this.mUISystemWindowsControlButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUISystemWindowsControlButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUISystemWindowsControlButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUISystemWindowsControlButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAssetsImagesLogo_VocImage : SilverlightImage
    {
        
        public UIAssetsImagesLogo_VocImage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightImage.PropertyNames.Source] = "Assets/Images/Logo_VocIraq_25px.png";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightControl UIItemTransitioningContentControl
        {
            get
            {
                if ((this.mUIItemTransitioningContentControl == null))
                {
                    this.mUIItemTransitioningContentControl = new SilverlightControl(this);
                    #region Search Criteria
                    this.mUIItemTransitioningContentControl.SearchProperties[UITestControl.PropertyNames.ControlType] = "TransitioningContentControl";
                    this.mUIItemTransitioningContentControl.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemTransitioningContentControl.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIItemTransitioningContentControl;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightControl mUIItemTransitioningContentControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage1 : SilverlightControl
    {
        
        public UIMainPageMainPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab1 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab1(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab1 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab1 : SilverlightTab
    {
        
        public UITabTab1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIGridResultsTable UIGridResultsTable
        {
            get
            {
                if ((this.mUIGridResultsTable == null))
                {
                    this.mUIGridResultsTable = new UIGridResultsTable(this);
                }
                return this.mUIGridResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridResultsTable mUIGridResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGridResultsTable : SilverlightTable
    {
        
        public UIGridResultsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTable.PropertyNames.AutomationId] = "GridResults";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UICertificate33Row UICertificate33Row
        {
            get
            {
                if ((this.mUICertificate33Row == null))
                {
                    this.mUICertificate33Row = new UICertificate33Row(this);
                }
                return this.mUICertificate33Row;
            }
        }
        #endregion
        
        #region Fields
        private UICertificate33Row mUICertificate33Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICertificate33Row : SilverlightRow
    {
        
        public UICertificate33Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightRow.PropertyNames.Name] = "Certificate : 33";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell : SilverlightCell
    {
        
        public UIItemCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnIndex] = "7";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new SilverlightHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.Name] = "Edit";
                    this.mUIEditHyperlink.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage2 : SilverlightControl
    {
        
        public UIMainPageMainPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab2 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab2(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab2 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab2 : SilverlightTab
    {
        
        public UITabTab2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightRadioButton UINORadioButton
        {
            get
            {
                if ((this.mUINORadioButton == null))
                {
                    this.mUINORadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.Name] = "No";
                    this.mUINORadioButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUINORadioButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightRadioButton mUINORadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage3 : SilverlightControl
    {
        
        public UIMainPageMainPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab3 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab3(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab3 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab3 : SilverlightTab
    {
        
        public UITabTab3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISaveButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIVoCDocument1 : HtmlDocument
    {
        
        public UIVoCDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "VoC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/VocIraq/webtest.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://ecuio0001/VocIraq/webtest.html";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlHoPane1 UISilverlightControlHoPane
        {
            get
            {
                if ((this.mUISilverlightControlHoPane == null))
                {
                    this.mUISilverlightControlHoPane = new UISilverlightControlHoPane1(this);
                }
                return this.mUISilverlightControlHoPane;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlHoPane1 mUISilverlightControlHoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISilverlightControlHoPane1 : HtmlDiv
    {
        
        public UISilverlightControlHoPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "silverlightControlHost";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=silverlightControlHost";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCustom1 UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom1(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom1 mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCustom1 : HtmlCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "OBJECT";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "data=\"data:application/x-oleobject;base6";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIMainPageMainPage4 UIMainPageMainPage
        {
            get
            {
                if ((this.mUIMainPageMainPage == null))
                {
                    this.mUIMainPageMainPage = new UIMainPageMainPage4(this);
                }
                return this.mUIMainPageMainPage;
            }
        }
        
        public UIMainPageMainPage11 UIMainPageMainPage1
        {
            get
            {
                if ((this.mUIMainPageMainPage1 == null))
                {
                    this.mUIMainPageMainPage1 = new UIMainPageMainPage11(this);
                }
                return this.mUIMainPageMainPage1;
            }
        }
        
        public UIMainPageMainPage21 UIMainPageMainPage2
        {
            get
            {
                if ((this.mUIMainPageMainPage2 == null))
                {
                    this.mUIMainPageMainPage2 = new UIMainPageMainPage21(this);
                }
                return this.mUIMainPageMainPage2;
            }
        }
        
        public UIMainPageMainPage31 UIMainPageMainPage3
        {
            get
            {
                if ((this.mUIMainPageMainPage3 == null))
                {
                    this.mUIMainPageMainPage3 = new UIMainPageMainPage31(this);
                }
                return this.mUIMainPageMainPage3;
            }
        }
        
        public UIMainPageMainPage41 UIMainPageMainPage4
        {
            get
            {
                if ((this.mUIMainPageMainPage4 == null))
                {
                    this.mUIMainPageMainPage4 = new UIMainPageMainPage41(this);
                }
                return this.mUIMainPageMainPage4;
            }
        }
        
        public UIMainPageMainPage5 UIMainPageMainPage5
        {
            get
            {
                if ((this.mUIMainPageMainPage5 == null))
                {
                    this.mUIMainPageMainPage5 = new UIMainPageMainPage5(this);
                }
                return this.mUIMainPageMainPage5;
            }
        }
        
        public UIMainPageMainPage6 UIMainPageMainPage6
        {
            get
            {
                if ((this.mUIMainPageMainPage6 == null))
                {
                    this.mUIMainPageMainPage6 = new UIMainPageMainPage6(this);
                }
                return this.mUIMainPageMainPage6;
            }
        }
        
        public UIMainPageMainPage7 UIMainPageMainPage7
        {
            get
            {
                if ((this.mUIMainPageMainPage7 == null))
                {
                    this.mUIMainPageMainPage7 = new UIMainPageMainPage7(this);
                }
                return this.mUIMainPageMainPage7;
            }
        }
        
        public UIMainPageMainPage8 UIMainPageMainPage8
        {
            get
            {
                if ((this.mUIMainPageMainPage8 == null))
                {
                    this.mUIMainPageMainPage8 = new UIMainPageMainPage8(this);
                }
                return this.mUIMainPageMainPage8;
            }
        }
        
        public UIMainPageMainPage9 UIMainPageMainPage9
        {
            get
            {
                if ((this.mUIMainPageMainPage9 == null))
                {
                    this.mUIMainPageMainPage9 = new UIMainPageMainPage9(this);
                }
                return this.mUIMainPageMainPage9;
            }
        }
        
        public UIMainPageMainPage10 UIMainPageMainPage10
        {
            get
            {
                if ((this.mUIMainPageMainPage10 == null))
                {
                    this.mUIMainPageMainPage10 = new UIMainPageMainPage10(this);
                }
                return this.mUIMainPageMainPage10;
            }
        }
        
        public UIMainPageMainPage111 UIMainPageMainPage11
        {
            get
            {
                if ((this.mUIMainPageMainPage11 == null))
                {
                    this.mUIMainPageMainPage11 = new UIMainPageMainPage111(this);
                }
                return this.mUIMainPageMainPage11;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPageMainPage4 mUIMainPageMainPage;
        
        private UIMainPageMainPage11 mUIMainPageMainPage1;
        
        private UIMainPageMainPage21 mUIMainPageMainPage2;
        
        private UIMainPageMainPage31 mUIMainPageMainPage3;
        
        private UIMainPageMainPage41 mUIMainPageMainPage4;
        
        private UIMainPageMainPage5 mUIMainPageMainPage5;
        
        private UIMainPageMainPage6 mUIMainPageMainPage6;
        
        private UIMainPageMainPage7 mUIMainPageMainPage7;
        
        private UIMainPageMainPage8 mUIMainPageMainPage8;
        
        private UIMainPageMainPage9 mUIMainPageMainPage9;
        
        private UIMainPageMainPage10 mUIMainPageMainPage10;
        
        private UIMainPageMainPage111 mUIMainPageMainPage11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage4 : SilverlightControl
    {
        
        public UIMainPageMainPage4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab4 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab4(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab4 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab4 : SilverlightTab
    {
        
        public UITabTab4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIGridResultsTable1 UIGridResultsTable
        {
            get
            {
                if ((this.mUIGridResultsTable == null))
                {
                    this.mUIGridResultsTable = new UIGridResultsTable1(this);
                }
                return this.mUIGridResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridResultsTable1 mUIGridResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGridResultsTable1 : SilverlightTable
    {
        
        public UIGridResultsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTable.PropertyNames.AutomationId] = "GridResults";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UICertificate1Row UICertificate1Row
        {
            get
            {
                if ((this.mUICertificate1Row == null))
                {
                    this.mUICertificate1Row = new UICertificate1Row(this);
                }
                return this.mUICertificate1Row;
            }
        }
        #endregion
        
        #region Fields
        private UICertificate1Row mUICertificate1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICertificate1Row : SilverlightRow
    {
        
        public UICertificate1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightRow.PropertyNames.Name] = "Certificate : 1";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCell1 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell1(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell1 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell1 : SilverlightCell
    {
        
        public UIItemCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnIndex] = "10";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIRequestHyperlink
        {
            get
            {
                if ((this.mUIRequestHyperlink == null))
                {
                    this.mUIRequestHyperlink = new SilverlightHyperlink(this);
                    #region Search Criteria
                    this.mUIRequestHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.AutomationId] = "btnRequest";
                    this.mUIRequestHyperlink.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIRequestHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIRequestHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage11 : SilverlightControl
    {
        
        public UIMainPageMainPage11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : SilverlightControl
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIQuestionChildWindow UIQuestionChildWindow
        {
            get
            {
                if ((this.mUIQuestionChildWindow == null))
                {
                    this.mUIQuestionChildWindow = new UIQuestionChildWindow(this);
                }
                return this.mUIQuestionChildWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIQuestionChildWindow mUIQuestionChildWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIQuestionChildWindow : SilverlightChildWindow
    {
        
        public UIQuestionChildWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightChildWindow.PropertyNames.Name] = "Question";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "OKButton";
                    this.mUIYesButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage21 : SilverlightControl
    {
        
        public UIMainPageMainPage21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab5 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab5(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab5 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab5 : SilverlightTab
    {
        
        public UITabTab5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIGridResultsTable2 UIGridResultsTable
        {
            get
            {
                if ((this.mUIGridResultsTable == null))
                {
                    this.mUIGridResultsTable = new UIGridResultsTable2(this);
                }
                return this.mUIGridResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridResultsTable2 mUIGridResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGridResultsTable2 : SilverlightTable
    {
        
        public UIGridResultsTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTable.PropertyNames.AutomationId] = "GridResults";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UICertificate4Row UICertificate4Row
        {
            get
            {
                if ((this.mUICertificate4Row == null))
                {
                    this.mUICertificate4Row = new UICertificate4Row(this);
                }
                return this.mUICertificate4Row;
            }
        }
        #endregion
        
        #region Fields
        private UICertificate4Row mUICertificate4Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICertificate4Row : SilverlightRow
    {
        
        public UICertificate4Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightRow.PropertyNames.Name] = "Certificate : 4";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCell2 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell2(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell2 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell2 : SilverlightCell
    {
        
        public UIItemCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnIndex] = "7";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new SilverlightHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.Name] = "Edit";
                    this.mUIEditHyperlink.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage31 : SilverlightControl
    {
        
        public UIMainPageMainPage31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab6 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab6(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab6 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab6 : SilverlightTab
    {
        
        public UITabTab6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIRequestButton
        {
            get
            {
                if ((this.mUIRequestButton == null))
                {
                    this.mUIRequestButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIRequestButton.SearchProperties[SilverlightButton.PropertyNames.Name] = "Request";
                    this.mUIRequestButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIRequestButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIRequestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage41 : SilverlightControl
    {
        
        public UIMainPageMainPage41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow1 : SilverlightControl
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIQuestionChildWindow1 UIQuestionChildWindow
        {
            get
            {
                if ((this.mUIQuestionChildWindow == null))
                {
                    this.mUIQuestionChildWindow = new UIQuestionChildWindow1(this);
                }
                return this.mUIQuestionChildWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIQuestionChildWindow1 mUIQuestionChildWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIQuestionChildWindow1 : SilverlightChildWindow
    {
        
        public UIQuestionChildWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightChildWindow.PropertyNames.Name] = "Question";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "OKButton";
                    this.mUIYesButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage5 : SilverlightControl
    {
        
        public UIMainPageMainPage5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab7 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab7(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab7 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab7 : SilverlightTab
    {
        
        public UITabTab7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIScrollViewerTopPane1 UIScrollViewerTopPane
        {
            get
            {
                if ((this.mUIScrollViewerTopPane == null))
                {
                    this.mUIScrollViewerTopPane = new UIScrollViewerTopPane1(this);
                }
                return this.mUIScrollViewerTopPane;
            }
        }
        #endregion
        
        #region Fields
        private UIScrollViewerTopPane1 mUIScrollViewerTopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIScrollViewerTopPane1 : SilverlightControl
    {
        
        public UIScrollViewerTopPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties["AutomationId"] = "ScrollViewerTop";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightTabItem UICertificatesTabItem
        {
            get
            {
                if ((this.mUICertificatesTabItem == null))
                {
                    this.mUICertificatesTabItem = new SilverlightTabItem(this);
                    #region Search Criteria
                    this.mUICertificatesTabItem.SearchProperties[SilverlightTabItem.PropertyNames.Name] = "Certificates";
                    this.mUICertificatesTabItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUICertificatesTabItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightTabItem mUICertificatesTabItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage6 : SilverlightControl
    {
        
        public UIMainPageMainPage6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab8 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab8(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab8 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab8 : SilverlightTab
    {
        
        public UITabTab8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIGridResultsTable3 UIGridResultsTable
        {
            get
            {
                if ((this.mUIGridResultsTable == null))
                {
                    this.mUIGridResultsTable = new UIGridResultsTable3(this);
                }
                return this.mUIGridResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridResultsTable3 mUIGridResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGridResultsTable3 : SilverlightTable
    {
        
        public UIGridResultsTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTable.PropertyNames.AutomationId] = "GridResults";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UICertificate9Row UICertificate9Row
        {
            get
            {
                if ((this.mUICertificate9Row == null))
                {
                    this.mUICertificate9Row = new UICertificate9Row(this);
                }
                return this.mUICertificate9Row;
            }
        }
        #endregion
        
        #region Fields
        private UICertificate9Row mUICertificate9Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICertificate9Row : SilverlightRow
    {
        
        public UICertificate9Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightRow.PropertyNames.Name] = "Certificate : 9";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCell3 UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell3(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell3 mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell3 : SilverlightCell
    {
        
        public UIItemCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnIndex] = "7";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new SilverlightHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.Name] = "Edit";
                    this.mUIEditHyperlink.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIEditHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage7 : SilverlightControl
    {
        
        public UIMainPageMainPage7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab9 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab9(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab9 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab9 : SilverlightTab
    {
        
        public UITabTab9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIRequestButton1
        {
            get
            {
                if ((this.mUIRequestButton1 == null))
                {
                    this.mUIRequestButton1 = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIRequestButton1.SearchProperties[SilverlightButton.PropertyNames.Name] = "Request";
                    this.mUIRequestButton1.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIRequestButton1;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIRequestButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage8 : SilverlightControl
    {
        
        public UIMainPageMainPage8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow2 : SilverlightControl
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIAlertChildWindow UIAlertChildWindow
        {
            get
            {
                if ((this.mUIAlertChildWindow == null))
                {
                    this.mUIAlertChildWindow = new UIAlertChildWindow(this);
                }
                return this.mUIAlertChildWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAlertChildWindow mUIAlertChildWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAlertChildWindow : SilverlightChildWindow
    {
        
        public UIAlertChildWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightChildWindow.PropertyNames.Name] = "Alert";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "OKButton";
                    this.mUIOKButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage9 : SilverlightControl
    {
        
        public UIMainPageMainPage9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab10 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab10(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab10 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab10 : SilverlightTab
    {
        
        public UITabTab10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIScrollViewerTopPane2 UIScrollViewerTopPane
        {
            get
            {
                if ((this.mUIScrollViewerTopPane == null))
                {
                    this.mUIScrollViewerTopPane = new UIScrollViewerTopPane2(this);
                }
                return this.mUIScrollViewerTopPane;
            }
        }
        #endregion
        
        #region Fields
        private UIScrollViewerTopPane2 mUIScrollViewerTopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIScrollViewerTopPane2 : SilverlightControl
    {
        
        public UIScrollViewerTopPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties["AutomationId"] = "ScrollViewerTop";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightTabItem UICertificatesTabItem
        {
            get
            {
                if ((this.mUICertificatesTabItem == null))
                {
                    this.mUICertificatesTabItem = new SilverlightTabItem(this);
                    #region Search Criteria
                    this.mUICertificatesTabItem.SearchProperties[SilverlightTabItem.PropertyNames.Name] = "Certificates";
                    this.mUICertificatesTabItem.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUICertificatesTabItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightTabItem mUICertificatesTabItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage10 : SilverlightControl
    {
        
        public UIMainPageMainPage10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UITabTab11 UITabTab
        {
            get
            {
                if ((this.mUITabTab == null))
                {
                    this.mUITabTab = new UITabTab11(this);
                }
                return this.mUITabTab;
            }
        }
        #endregion
        
        #region Fields
        private UITabTab11 mUITabTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITabTab11 : SilverlightTab
    {
        
        public UITabTab11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTab.PropertyNames.AutomationId] = "tab";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIGridResultsTable4 UIGridResultsTable
        {
            get
            {
                if ((this.mUIGridResultsTable == null))
                {
                    this.mUIGridResultsTable = new UIGridResultsTable4(this);
                }
                return this.mUIGridResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridResultsTable4 mUIGridResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGridResultsTable4 : SilverlightTable
    {
        
        public UIGridResultsTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightTable.PropertyNames.AutomationId] = "GridResults";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UICertificate9Row1 UICertificate9Row
        {
            get
            {
                if ((this.mUICertificate9Row == null))
                {
                    this.mUICertificate9Row = new UICertificate9Row1(this);
                }
                return this.mUICertificate9Row;
            }
        }
        #endregion
        
        #region Fields
        private UICertificate9Row1 mUICertificate9Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICertificate9Row1 : SilverlightRow
    {
        
        public UICertificate9Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightRow.PropertyNames.Name] = "Certificate : 9";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemCell11 UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new UIItemCell11(this);
                }
                return this.mUIItemCell1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell11 mUIItemCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell11 : SilverlightCell
    {
        
        public UIItemCell11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[SilverlightCell.PropertyNames.ColumnIndex] = "10";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIRequestHyperlink
        {
            get
            {
                if ((this.mUIRequestHyperlink == null))
                {
                    this.mUIRequestHyperlink = new SilverlightHyperlink(this);
                    #region Search Criteria
                    this.mUIRequestHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.AutomationId] = "btnRequest";
                    this.mUIRequestHyperlink.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIRequestHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIRequestHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainPageMainPage111 : SilverlightControl
    {
        
        public UIMainPageMainPage111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "MainPage";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow3 mUIItemWindow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow3 : SilverlightControl
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public UIAlertChildWindow1 UIAlertChildWindow
        {
            get
            {
                if ((this.mUIAlertChildWindow == null))
                {
                    this.mUIAlertChildWindow = new UIAlertChildWindow1(this);
                }
                return this.mUIAlertChildWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAlertChildWindow1 mUIAlertChildWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAlertChildWindow1 : SilverlightChildWindow
    {
        
        public UIAlertChildWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightChildWindow.PropertyNames.Name] = "Alert";
            this.WindowTitles.Add("VoC");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "OKButton";
                    this.mUIOKButton.WindowTitles.Add("VoC");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public WinWindow UISilverlightControlWindow
        {
            get
            {
                if ((this.mUISilverlightControlWindow == null))
                {
                    this.mUISilverlightControlWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUISilverlightControlWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Silverlight Control";
                    #endregion
                }
                return this.mUISilverlightControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUISilverlightControlWindow;
        #endregion
    }
}
