<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="OneError" xml:space="preserve">
    <value>There is 1 error</value>
  </data>
  <data name="SomeErrors" xml:space="preserve">
    <value>There are {0} errors</value>
  </data>
  <data name="NotValidValue" xml:space="preserve">
    <value>Value {0} not valid</value>
  </data>
  <data name="UserNameNotFilled" xml:space="preserve">
    <value>Please write your email</value>
  </data>
  <data name="PasswordNotFilled" xml:space="preserve">
    <value>Please write your password</value>
  </data>
  <data name="EmailFormatNotValid" xml:space="preserve">
    <value>Please write a valid email address</value>
  </data>
  <data name="WrongLogin" xml:space="preserve">
    <value>The email or password provided is incorrect</value>
  </data>
  <data name="LoggedAs" xml:space="preserve">
    <value>Logged as {0}</value>
  </data>
  <data name="CertificateNumber" xml:space="preserve">
    <value>Certificate Number</value>
  </data>
  <data name="IssuanceDateFrom" xml:space="preserve">
    <value>Issuance Date From</value>
  </data>
  <data name="IssuanceDateTo" xml:space="preserve">
    <value>Issuance Date To</value>
  </data>
  <data name="CertificateStatus" xml:space="preserve">
    <value>Certificate Status</value>
  </data>
  <data name="EntryPoint" xml:space="preserve">
    <value>Entry Point</value>
  </data>
  <data name="SearchCertificates" xml:space="preserve">
    <value>List of Certificates</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="LegendSearch" xml:space="preserve">
    <value>Please enter your search criteria:</value>
  </data>
  <data name="CertificateList" xml:space="preserve">
    <value>Certificate list</value>
  </data>
  <data name="SelectOneOption" xml:space="preserve">
    <value>Select One Option</value>
  </data>
  <data name="UserInactive" xml:space="preserve">
    <value>The user is not active</value>
  </data>
  <data name="CorformStatus" xml:space="preserve">
    <value>Conform</value>
  </data>
  <data name="NoCorformStatus" xml:space="preserve">
    <value>No Conform</value>
  </data>
  <data name="CancelStatus" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="IssuanceDate" xml:space="preserve">
    <value>Issuance Date</value>
  </data>
  <data name="CommonErrorMessageAjax" xml:space="preserve">
    <value>An error occurred, please contact with the administrator</value>
  </data>
  <data name="Go" xml:space="preserve">
    <value>Go</value>
  </data>
  <data name="GotoPage" xml:space="preserve">
    <value>Go to page:</value>
  </data>
  <data name="PageCurrentPaginator" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="NoResults" xml:space="preserve">
    <value>No results found</value>
  </data>
  <data name="CertificateFile" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="DownloadCertificate" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>An error occured in the execution of the action, please contact with the system administrator.</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ErrorPdfFile" xml:space="preserve">
    <value>Error. The pdf file is not configured correctly for this certificate. Please contact with the administrator.</value>
  </data>
  <data name="ErrorPdfTitle" xml:space="preserve">
    <value>Error download</value>
  </data>
  <data name="ErrorPdfFileNotExist" xml:space="preserve">
    <value>Error. The pdf file does not exist in the server. Please contact with the administrator.</value>
  </data>
  <data name="CertificateTitle" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="WorkflowStatus" xml:space="preserve">
    <value>Workflow Status</value>
  </data>
  <data name="Published" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="CertificateType" xml:space="preserve">
    <value>Type of Certificate</value>
  </data>
  <data name="Invoiced" xml:space="preserve">
    <value>Invoiced</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="DocumentName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="DocumentDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DocumentCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="SupportingDocument" xml:space="preserve">
    <value>Supporting Document</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="GeneralInformation" xml:space="preserve">
    <value>General Information</value>
  </data>
  <data name="DetailCertificate" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Certificates" xml:space="preserve">
    <value>Certificates</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="UserManagement" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Password Confirmation</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SearchUsers" xml:space="preserve">
    <value>List of Users</value>
  </data>
  <data name="FieldMandatoryValidation" xml:space="preserve">
    <value>This field is mandatory</value>
  </data>
  <data name="NotIqualPasswordValidation" xml:space="preserve">
    <value>Password are not equals</value>
  </data>
  <data name="ShortPasswordValidation" xml:space="preserve">
    <value>The password must have 8 to 20 characters </value>
  </data>
  <data name="FormatPasswordValidation" xml:space="preserve">
    <value>The password must contains at least one digit from 0-9 and one special symbols in the list "@#$%[],+?~{}+.!&amp;*'+/=^_`|-¡¿;&lt;&gt;°()\:"</value>
  </data>
  <data name="NoUserCreatedError" xml:space="preserve">
    <value>The user couldn´t be created</value>
  </data>
  <data name="SpecificMadatoryField" xml:space="preserve">
    <value>The {0} field  is a mandatory field</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CaptchaCode" xml:space="preserve">
    <value>Captcha code</value>
  </data>
  <data name="CaptchaValue" xml:space="preserve">
    <value>Please write the code shown above</value>
  </data>
  <data name="ForgetPasswordCaptchaNotValid" xml:space="preserve">
    <value>The captcha code isn't correct.</value>
  </data>
  <data name="ForgetPasswordEmailNotValid" xml:space="preserve">
    <value>Please write an e-mail</value>
  </data>
  <data name="ForgetPasswordSubjectEmail" xml:space="preserve">
    <value>VoC Iraq – Password Recovery</value>
  </data>
  <data name="ForgetPasswordUserNotFound" xml:space="preserve">
    <value>This user was not found, please verify your information.</value>
  </data>
  <data name="ResetPasswordButton" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="ResetPasswordTitle" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="ResetPasswordConfirmationParagraph1" xml:space="preserve">
    <value>An e-mail has been sent to your e-mail address allowing you to reset your password.</value>
  </data>
  <data name="ResetPasswordConfirmationParagraph2" xml:space="preserve">
    <value>You may have to check your junk mail box for our message.</value>
  </data>
  <data name="ReturnLogin" xml:space="preserve">
    <value>Return to login</value>
  </data>
  <data name="TemporaryPassword" xml:space="preserve">
    <value>Temporary password</value>
  </data>
  <data name="ChangePasswordButton" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ForgetPasswordGeneralError" xml:space="preserve">
    <value>There is an error changing the password</value>
  </data>
  <data name="ForgetPasswordSubjectConfirEmail" xml:space="preserve">
    <value>VoC Iraq - Password has been changed sucessfully</value>
  </data>
  <data name="MinLegthPassword" xml:space="preserve">
    <value>The password length is too short, you have to write at least 8 characters</value>
  </data>
  <data name="NewPassRequired" xml:space="preserve">
    <value>The write the new password</value>
  </data>
  <data name="OldPassRequired" xml:space="preserve">
    <value>Please write the old password</value>
  </data>
  <data name="ReNewPassWordRequired" xml:space="preserve">
    <value>The re-write the new password</value>
  </data>
  <data name="ChangedPasswordConfirmationParagraph1" xml:space="preserve">
    <value>Your password has been changed successfully</value>
  </data>
  <data name="ChangedPasswordConfirmationParagraph2" xml:space="preserve">
    <value>Please, go to the login screen and log on with your username and your new password</value>
  </data>
  <data name="ChangePasswordTitle" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="MaxLegthPassword" xml:space="preserve">
    <value>The password is too large.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditingUser" xml:space="preserve">
    <value>Edit User</value>
  </data>
  <data name="NewUser" xml:space="preserve">
    <value>New User</value>
  </data>
  <data name="ExportExcelButton" xml:space="preserve">
    <value>Export to Excel</value>
  </data>
  <data name="UserList" xml:space="preserve">
    <value>User list</value>
  </data>
  <data name="ReleaseNote" xml:space="preserve">
    <value>Release Note</value>
  </data>
</root>